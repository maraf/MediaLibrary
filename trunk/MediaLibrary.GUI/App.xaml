<Application x:Class="MediaLibrary.GUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DesktopCore.Data;assembly=DesktopCore"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisibility" />
        <local:InversedBoolToVisibilityConverter x:Key="inversedBoolToVisibility" />
        <local:SelectedItemToStringConverter x:Key="selectedItemToString" />
        <local:NullToVisibilityConverter x:Key="nullToVisibility" />
        <local:NullToBoolConverter x:Key="nullToBool" />
        <local:StringToArrayConverter x:Key="stringToArray" />
        <local:GrayScaleConverter x:Key="grayScale" />
        <local:BoolToGrayScaleConverter x:Key="boolToGrayScale" />
        <local:DateTimeFormatConverter x:Key="dateTimeFormat" />

        <Style x:Key="border" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="White" />
            <Setter Property="CornerRadius" Value="3" />
        </Style>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Background" Value="White" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Gray" />
        </Style>
        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="White" />
            <Setter Property="Margin" Value="5,5,5,5" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Gray" />
        </Style>
        <Style x:Key="link" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Blue" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding Button.Foreground}" Padding="{TemplateBinding Button.Padding}" Margin="{TemplateBinding Button.Margin}">
                            <TextBlock Text="{TemplateBinding Button.Content}" Foreground="{TemplateBinding Button.Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="label" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="plainButton">
            <Setter Property="Button.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ContentPresenter Content="{TemplateBinding Button.Content}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Button.Cursor" Value="Hand" />
        </Style>
        <Style x:Key="imageButton" BasedOn="{StaticResource plainButton}">
            <Setter Property="Button.Margin" Value="0,4,5,4" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
            <Style.Triggers>
                <Trigger Property="Button.IsEnabled" Value="false">
                    <Setter Property="Button.Opacity" Value=".5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="toggleStarButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource imageButton}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <Image Width="16" Source="/MediaLibrary.GUI;component/Images/StarGray.png" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource inversedBoolToVisibility}}" />
                            <Image Width="16" Source="/MediaLibrary.GUI;component/Images/Star.png" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource boolToVisibility}}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
